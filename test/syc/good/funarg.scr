mapfile "funarg.map";
ldbin "funarg.bin", 0x8000;

ld HL, 0x1001;
ld DE, 0x2002;
ld BC, 0x3003;
ld word ptr (@_ri1), 0;
ld word ptr (@_ri2), 0;
ld word ptr (@_ri3), 0;
call @_int3;
verify word ptr (@_ri1), 0x1001;
verify word ptr (@_ri2), 0x2002;
verify word ptr (@_ri3), 0x3003;

ld word ptr (@_i1), 0x1001;
ld word ptr (@_i2), 0x2002;
ld word ptr (@_i3), 0x3003;
ld word ptr (@_ri1), 0;
ld word ptr (@_ri2), 0;
ld word ptr (@_ri3), 0;
call @_call_int3;
verify word ptr (@_ri1), 0x1001;
verify word ptr (@_ri2), 0x2002;
verify word ptr (@_ri3), 0x3003;

ld HL, 0x1001;
ld DE, 0x2002;
ld BC, 0x3003;
push 0x5005;
push 0x4004;
ld word ptr (@_ri1), 0;
ld word ptr (@_ri2), 0;
ld word ptr (@_ri3), 0;
ld word ptr (@_ri4), 0;
ld word ptr (@_ri5), 0;
call @_int5;
pop;
pop;
verify word ptr (@_ri1), 0x1001;
verify word ptr (@_ri2), 0x2002;
verify word ptr (@_ri3), 0x3003;
verify word ptr (@_ri4), 0x4004;
verify word ptr (@_ri5), 0x5005;

ld word ptr (@_i1), 0x1001;
ld word ptr (@_i2), 0x2002;
ld word ptr (@_i3), 0x3003;
ld word ptr (@_i4), 0x4004;
ld word ptr (@_i5), 0x5005;
ld word ptr (@_ri1), 0;
ld word ptr (@_ri2), 0;
ld word ptr (@_ri3), 0;
ld word ptr (@_ri4), 0;
ld word ptr (@_ri5), 0;
call @_call_int5;
verify word ptr (@_ri1), 0x1001;
verify word ptr (@_ri2), 0x2002;
verify word ptr (@_ri3), 0x3003;
verify word ptr (@_ri4), 0x4004;
verify word ptr (@_ri5), 0x5005;

ld A, 0x10;
ld B, 0x20;
ld C, 0x30;
ld D, 0x40;
ld E, 0x50;
ld H, 0x60;
ld L, 0x70;
ld byte ptr (@_rc1), 0;
ld byte ptr (@_rc2), 0;
ld byte ptr (@_rc3), 0;
ld byte ptr (@_rc4), 0;
ld byte ptr (@_rc5), 0;
ld byte ptr (@_rc6), 0;
ld byte ptr (@_rc7), 0;
call @_char7;
verify byte ptr (@_rc1), 0x10;
verify byte ptr (@_rc2), 0x20;
verify byte ptr (@_rc3), 0x30;
verify byte ptr (@_rc4), 0x40;
verify byte ptr (@_rc5), 0x50;
verify byte ptr (@_rc6), 0x60;
verify byte ptr (@_rc7), 0x70;

ld byte ptr (@_c1), 0x10;
ld byte ptr (@_c2), 0x20;
ld byte ptr (@_c3), 0x30;
ld byte ptr (@_c4), 0x40;
ld byte ptr (@_c5), 0x50;
ld byte ptr (@_c6), 0x60;
ld byte ptr (@_c7), 0x70;
ld byte ptr (@_rc1), 0;
ld byte ptr (@_rc2), 0;
ld byte ptr (@_rc3), 0;
ld byte ptr (@_rc4), 0;
ld byte ptr (@_rc5), 0;
ld byte ptr (@_rc6), 0;
ld byte ptr (@_rc7), 0;
call @_call_char7;
verify byte ptr (@_rc1), 0x10;
verify byte ptr (@_rc2), 0x20;
verify byte ptr (@_rc3), 0x30;
verify byte ptr (@_rc4), 0x40;
verify byte ptr (@_rc5), 0x50;
verify byte ptr (@_rc6), 0x60;
verify byte ptr (@_rc7), 0x70;

ld A, 0x10;
ld B, 0x20;
ld C, 0x30;
ld D, 0x40;
ld E, 0x50;
ld H, 0x60;
ld L, 0x70;
push 0x0080;
ld byte ptr (@_rc1), 0;
ld byte ptr (@_rc2), 0;
ld byte ptr (@_rc3), 0;
ld byte ptr (@_rc4), 0;
ld byte ptr (@_rc5), 0;
ld byte ptr (@_rc6), 0;
ld byte ptr (@_rc7), 0;
ld byte ptr (@_rc8), 0;
call @_char8;
pop;
verify byte ptr (@_rc1), 0x10;
verify byte ptr (@_rc2), 0x20;
verify byte ptr (@_rc3), 0x30;
verify byte ptr (@_rc4), 0x40;
verify byte ptr (@_rc5), 0x50;
verify byte ptr (@_rc6), 0x60;
verify byte ptr (@_rc7), 0x70;
verify byte ptr (@_rc8), 0x80;

ld byte ptr (@_c1), 0x10;
ld byte ptr (@_c2), 0x20;
ld byte ptr (@_c3), 0x30;
ld byte ptr (@_c4), 0x40;
ld byte ptr (@_c5), 0x50;
ld byte ptr (@_c6), 0x60;
ld byte ptr (@_c7), 0x70;
ld byte ptr (@_c8), 0x80;
ld byte ptr (@_rc1), 0;
ld byte ptr (@_rc2), 0;
ld byte ptr (@_rc3), 0;
ld byte ptr (@_rc4), 0;
ld byte ptr (@_rc5), 0;
ld byte ptr (@_rc6), 0;
ld byte ptr (@_rc7), 0;
ld byte ptr (@_rc8), 0;
call @_call_char8;
verify byte ptr (@_rc1), 0x10;
verify byte ptr (@_rc2), 0x20;
verify byte ptr (@_rc3), 0x30;
verify byte ptr (@_rc4), 0x40;
verify byte ptr (@_rc5), 0x50;
verify byte ptr (@_rc6), 0x60;
verify byte ptr (@_rc7), 0x70;
verify byte ptr (@_rc8), 0x80;

ld HL, 0x5678;
ld DE, 0x1234;
ld BC, 0x1122;
ld A, 0x42;
ld dword ptr (@_rl1), 0;
ld word ptr (@_ri1), 0;
ld byte ptr (@_rc1), 0;
call @_long_int_char;
verify dword ptr (@_rl1), 0x12345678;
verify word ptr (@_ri1), 0x1122;
verify byte ptr (@_rc1), 0x42;

ld dword ptr (@_l1), 0x12345678;
ld word ptr (@_i1), 0x1122;
ld byte ptr (@_c1), 0x42;
ld dword ptr (@_rl1), 0;
ld word ptr (@_ri1), 0;
ld byte ptr (@_rc1), 0;
call @_call_long_int_char;
verify dword ptr (@_rl1), 0x12345678;
verify word ptr (@_ri1), 0x1122;
verify byte ptr (@_rc1), 0x42;

ld HL, 0x3344;
ld DE, 0x1122;
ld BC, 0x7788;
push 0x5566;
ld dword ptr (@_rl1), 0;
ld dword ptr (@_rl2), 0;
call @_long2;
pop;
verify dword ptr (@_rl1), 0x11223344;
verify dword ptr (@_rl2), 0x55667788;

ld dword ptr (@_l1), 0x11223344;
ld dword ptr (@_l2), 0x55667788;
ld dword ptr (@_rl1), 0;
ld dword ptr (@_rl2), 0;
call @_call_long2;
verify dword ptr (@_rl1), 0x11223344;
verify dword ptr (@_rl2), 0x55667788;

ld HL, 0x7788;
ld DE, 0x5566;
ld BC, 0x3344;
push 0x1122;
ld qword ptr (@_rll1), 0;
call @_longlong;
pop;
verify qword ptr (@_rll1), 0x1122334455667788;

ld qword ptr (@_ll1), 0x1122334455667788;
ld qword ptr (@_rll1), 0;
call @_call_longlong;
verify qword ptr (@_rll1), 0x1122334455667788;
